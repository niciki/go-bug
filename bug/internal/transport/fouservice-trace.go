// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"context"
	"github.com/opentracing/opentracing-go"
	"service/internal/interfaces"
)

type traceFouService struct {
	next interfaces.FouService
}

func traceMiddlewareFouService(next interfaces.FouService) interfaces.FouService {
	return &traceFouService{next: next}
}

func (svc traceFouService) PrintString(ctx context.Context, id string) (err error) {
	span := opentracing.SpanFromContext(ctx)
	span.SetTag("method", "PrintString")
	return svc.next.PrintString(ctx, id)
}

func (svc traceFouService) Get(ctx context.Context, id string) (answ string, err error) {
	span := opentracing.SpanFromContext(ctx)
	span.SetTag("method", "Get")
	return svc.next.Get(ctx, id)
}
