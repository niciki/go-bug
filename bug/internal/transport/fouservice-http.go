// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"github.com/gofiber/fiber/v2"
	"service/internal/interfaces"
)

type httpFouService struct {
	errorHandler     ErrorHandler
	maxBatchSize     int
	maxParallelBatch int
	svc              *serverFouService
	base             interfaces.FouService
}

func NewFouService(svcFouService interfaces.FouService) (srv *httpFouService) {

	srv = &httpFouService{
		base: svcFouService,
		svc:  newServerFouService(svcFouService),
	}
	return
}

func (http *httpFouService) Service() MiddlewareSetFouService {
	return http.svc
}

func (http *httpFouService) WithLog() *httpFouService {
	http.svc.WithLog()
	return http
}

func (http *httpFouService) WithTrace() *httpFouService {
	http.svc.WithTrace()
	return http
}

func (http *httpFouService) WithMetrics() *httpFouService {
	http.svc.WithMetrics()
	return http
}

func (http *httpFouService) WithErrorHandler(handler ErrorHandler) *httpFouService {
	http.errorHandler = handler
	return http
}

func (http *httpFouService) SetRoutes(route *fiber.App) {
	route.Post("/v1/printstring/:id", http.servePrintString)
	route.Get("/v1/get/:id", http.serveGet)
}
